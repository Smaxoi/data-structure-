#include <iostream>
#include <string>
#include <cstring> // strlen, strcpy
using namespace std;

// 輸出時對齊
void printspace(char** names, int x, int mids) {
    for (int i = 0; i < x; i++) {
        int pos = 0;
        while (names[i][pos] != '\0' && names[i][pos] != ' ') {
            pos++;
        }
        for (int k = 0; k < mids - pos; k++) {
            cout << ' ';
        }
        cout << names[i] << endl;
    }
}

int main() {
    int x;
    cout << "請輸入學生人數: ";
    cin >> x;

    string* temp = new string[x]; // 暫存輸入
    int maxLen = 0; // 最長名字長度
    int mids = 0;   // 最長姓的長度

    cout << "請輸入 " << x << " 個英文全名:" << endl;
    cin.ignore();
    for (int i = 0; i < x; i++) {
        getline(cin, temp[i]);

        // 更新最長字串長度
        if ((int)temp[i].size() > maxLen) {
            maxLen = temp[i].size();
        }

        // 找名字中的空格位置 (姓的長度)
        int j = 0;
        while (j < (int)temp[i].size() && temp[i][j] != ' ') {
            j++;
        }
        if (j > mids) {
            mids = j;
        }
    }

    // 動態配置二維陣列
    char** names = new char*[x];
    for (int i = 0; i < x; i++) {
        names[i] = new char[maxLen + 1]; // +1 給 '\0'
        strcpy(names[i], temp[i].c_str());
    }

    // 對齊輸出
    printspace(names, x, mids);

    // 釋放記憶體
    for (int i = 0; i < x; i++) {
        delete[] names[i];
    }
    delete[] names;
    delete[] temp;

    return 0;
}